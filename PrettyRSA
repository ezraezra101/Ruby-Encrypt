#!/usr/bin/env ruby
def make_rsa_key(e)
  primes=primegen()
  $n, $d = rsa_keygen(e,primes)
  $e=e
end

def primegen()
  primes = [61,53]
#  primes = [11,13]
  primes
end

def rsa_keygen(e,primes)
  n=1
  totient=1
  semiarbitrary=15

  for i in 0..primes.length-1
    n*=primes[i]
    totient*=primes[i]-1
  end

  d= (totient*semiarbitrary + 1)/e

  privatekey=[n,d]
  publickey=[n,e]
  privatekey
end

def to_rsa(input, n, e)
  output=(input**e)%n
  output
end

def from_rsa(input, d, n)
  output=(input**d)%n
  output
end

make_rsa_key(17)
mesg=65
encrypted=to_rsa(mesg,$e)
puts "encrypted"
puts encrypted
puts "From_rsa"
puts from_rsa(encrypted,$d, $n)
puts "keys"
puts $d
puts $n
puts "*********"